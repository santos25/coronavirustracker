{"version":3,"sources":["Api/index.js","components/Cards/Card/Card.js","components/Cards/Cards.js","components/CountryPicker/CountryPicker.js","components/Chart/Chart.js","components/Table/TableProvinces.js","components/Nav/Nav.js","App.js","index.js","images/virus.png"],"names":["URL","URLV2","fetchDataGlobal","country","a","urlChange","fetch","data","json","confirmed","recovered","deaths","lastUpdate","dataObject","console","log","fetchDataByCountry","dead","updated","value","fetchDataProv","result","fetchCountries","datas","map","location","countryCode","country_code","useStyles","makeStyles","theme","root","breakpoints","down","margin","content","textAlign","border","props","color","Card","label","classes","Grid","xs","sm","className","clsx","item","component","CardMaterial","CardContent","Typography","variant","end","separator","useStyle","container","Cards","spacing","justify","subtitle","width","maxWidth","maxHeight","overflowY","CounterPicker","countrySelected","handleCountry","countryFilter","useState","countries","setCountries","selectedIndex","setSelectedIndex","useEffect","countriesFiltered","filter","toLowerCase","includes","List","aria-label","i","ListItem","button","key","selected","onClick","e","ListItemText","primary","Chart","pieChart","labels","datasets","backgroundColor","options","legend","display","title","text","table","minWidth","TableProvinces","provinces","filterProvinces","city","TableContainer","Paper","Table","stickyHeader","TableHead","TableRow","TableCell","align","TableBody","length","scope","row","img","height","tittle","padding","marginLeft","Nav","AppBar","position","Toolbar","src","CovidLogo","alt","App","state","dataProvinces","stepTable","loadingDataSelected","setState","renderTableOrLine","fetchedData","fetchedDataProvinces","this","Date","toDateString","action","type","placeholder","onChange","target","CountryPicker","React","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.87f77237.chunk.js","sourcesContent":["const URL = \"https://covid19.mathdro.id/api\";\r\nconst URLV2 = \"https://www.trackcorona.live/api\";\r\n\r\nexport const fetchDataGlobal = async (country) => {\r\n  try {\r\n    let urlChange = URL;\r\n    if (country) {\r\n      urlChange = `${URL}/countries/${country}`;\r\n    }\r\n\r\n    const data = await fetch(urlChange);\r\n    const { confirmed, recovered, deaths, lastUpdate } = await data.json();\r\n\r\n    const dataObject = {\r\n      confirmed,\r\n      recovered,\r\n      deaths,\r\n      lastUpdate,\r\n    };\r\n    return dataObject;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchDataByCountry = async (country) => {\r\n  try {\r\n    let urlChange = `${URLV2}/countries/${country}`;\r\n\r\n    // console.log(country);\r\n\r\n    const data = await fetch(urlChange);\r\n\r\n    const {\r\n      data: [{ confirmed, dead, recovered, updated }],\r\n    } = await data.json();\r\n\r\n    // console.log({ confirmed, dead, recovered });\r\n\r\n    const dataObject = {\r\n      confirmed: { value: confirmed },\r\n      recovered: { value: recovered },\r\n      deaths: { value: dead },\r\n      lastUpdate: updated,\r\n    };\r\n\r\n    return dataObject;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchDataProv = async () => {\r\n  try {\r\n    let urlChange = `${URLV2}/cities`;\r\n\r\n    // console.log(country);\r\n\r\n    const result = await fetch(urlChange);\r\n\r\n    const { data } = await result.json();\r\n\r\n    // console.log({ confirmed, dead, recovered });\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const result = await fetch(`${URLV2}/countries`);\r\n    const { data } = await result.json();\r\n    // console.log(countries);\r\n    const datas = data.map((country) => ({\r\n      location: country.location,\r\n      countryCode: country.country_code,\r\n    }));\r\n    return datas;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchDaily = async () => {\r\n  try {\r\n    const data = await fetch(`${URL}/daily`);\r\n    const result = await data.json();\r\n    const dataDaily = result.map(({ confirmed, deaths, reportDate }) => ({\r\n      confirmed: confirmed.total,\r\n      deaths: deaths.total,\r\n      date: reportDate,\r\n    }));\r\n    return dataDaily;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport CountUp from \"react-countup\";\r\nimport clsx from \"clsx\";\r\n\r\nimport {\r\n  Grid,\r\n  Card as CardMaterial,\r\n  CardContent,\r\n  Typography,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      margin: \"10px 25px\",\r\n    },\r\n    margin: \"0 1rem\",\r\n    backgroundColor: \"transparent\",\r\n    color: \"black\",\r\n  },\r\n  content: {\r\n    textAlign: \"center\",\r\n  },\r\n  border: {\r\n    border: (props) => `2px solid ${props.color}`,\r\n  },\r\n}));\r\n\r\nconst Card = ({ label, value, ...props }) => {\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <Grid\r\n      xs={12}\r\n      sm={3}\r\n      className={clsx(classes.root, classes.border)}\r\n      item\r\n      component={CardMaterial}\r\n    >\r\n      <CardContent>\r\n        <div className={classes.content}>\r\n          <Typography variant=\"h5\">\r\n            <CountUp end={value} separator=\".\" />\r\n          </Typography>\r\n          <Typography>{label} </Typography>\r\n        </div>\r\n      </CardContent>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nimport Card from \"./Card/Card\";\r\n\r\nimport { Grid, makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  container: {\r\n    margin: \"2rem 0\",\r\n  },\r\n}));\r\n\r\nconst Cards = ({ data: { confirmed, deaths, recovered } }) => {\r\n  const classes = useStyle();\r\n  if (!confirmed) {\r\n    return <h2>Loading...</h2>;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <Grid container spacing={4} justify=\"center\">\r\n        {/* <div className=\"cards\"> */}\r\n        <Card\r\n          label=\"Infected\"\r\n          value={confirmed.value}\r\n          // date={lastUpdate}\r\n          subtitle=\"Infected\"\r\n          color=\"#231AA2\"\r\n        />\r\n        <Card\r\n          label=\"Recovered\"\r\n          value={recovered.value}\r\n          // date={lastUpdate}\r\n          subtitle=\"Recovered\"\r\n          color=\"#17C823\"\r\n        />\r\n        <Card\r\n          label=\"Dead\"\r\n          value={deaths.value}\r\n          // date={lastUpdate}\r\n          subtitle=\"Dead\"\r\n          color=\"#C90C1C\"\r\n        />\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { fetchCountries } from \"../../Api\";\r\n\r\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    maxHeight: 300,\r\n    overflowY: \"scroll\",\r\n  },\r\n}));\r\n\r\nconst CounterPicker = ({ countrySelected, handleCountry, countryFilter }) => {\r\n  const classes = useStyles();\r\n  const [countries, setCountries] = useState([]);\r\n  const [selectedIndex, setSelectedIndex] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      setCountries(await fetchCountries());\r\n    };\r\n\r\n    fetch();\r\n  }, []);\r\n\r\n  const countriesFiltered = () =>\r\n    countries.filter((country) =>\r\n      country.location.toLowerCase().includes(countryFilter.toLowerCase())\r\n    );\r\n\r\n  return (\r\n    <div>\r\n      <List\r\n        component=\"nav\"\r\n        aria-label=\"secondary mailbox folder\"\r\n        className={classes.root}\r\n      >\r\n        {countriesFiltered().map((country, i) => {\r\n          return (\r\n            <ListItem\r\n              button\r\n              key={i}\r\n              selected={selectedIndex === i}\r\n              onClick={(e) => {\r\n                handleCountry(countriesFiltered()[i]);\r\n                setSelectedIndex(i);\r\n              }}\r\n            >\r\n              <ListItemText primary={country.location} />\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </List>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CounterPicker;\r\n","import React from \"react\";\r\nimport { Pie } from \"react-chartjs-2\";\r\n\r\n// import { fetchDaily } from \"../../Api\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: \"100%\",\r\n    },\r\n    width: \"80%\",\r\n  },\r\n}));\r\n\r\nconst Chart = ({ country, confirmed, recovered, deaths }) => {\r\n  //   const [dataDaily, setDataDaily] = useState([]);\r\n  const classes = useStyles();\r\n\r\n  //   useEffect(() => {\r\n  //     // const fetchApi = async () => {\r\n  //     //   setDataDaily(await fetchDaily());\r\n  //     // };\r\n  //     // fetchApi();\r\n  //   }, []);\r\n\r\n  //   const lineChart = dataDaily.length ? (\r\n  //     <Line\r\n  //       data={{\r\n  //         labels: dataDaily.map(({ date }) => date),\r\n  //         datasets: [\r\n  //           {\r\n  //             data: dataDaily.map(({ confirmed }) => confirmed),\r\n  //             label: \"Confirmados\",\r\n  //             borderColor: \"#3333ff\",\r\n  //             fill: true,\r\n  //           },\r\n  //           {\r\n  //             data: dataDaily.map(({ deaths }) => deaths),\r\n  //             label: \"Muertes\",\r\n  //             borderColor: \"red\",\r\n  //           },\r\n  //         ],\r\n  //       }}\r\n  //     />\r\n  //   ) : null;\r\n\r\n  const pieChart = confirmed ? (\r\n    <Pie\r\n      data={{\r\n        labels: [\"Infected\", \"Recovered\", \"Dead\"],\r\n        datasets: [\r\n          {\r\n            label: \"People\",\r\n            backgroundColor: [\r\n              \"rgba(0, 0, 255, 0.5)\",\r\n              \"rgba(0, 255, 0, 0.5)\",\r\n              \"rgba(255, 0, 0, 0.5)\",\r\n            ],\r\n            data: [confirmed.value, recovered.value, deaths.value],\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: { display: true, text: `Country ${country}` },\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      {/* {\r\n                country ? barChart : lineChart\r\n            } */}\r\n\r\n      {pieChart}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import {\r\n  TableContainer,\r\n  TableHead,\r\n  Table,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  makeStyles,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\n\r\nimport clsx from \"clsx\";\r\n\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: \"100%\",\r\n    // border: \"2px solid black\",\r\n  },\r\n  table: {\r\n    minWidth: 150,\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\n\r\nconst TableProvinces = ({ countrySelected, provinces }) => {\r\n  const filterProvinces = () => {\r\n    const filtered = provinces.filter(\r\n      (city) => city.country_code === countrySelected\r\n    );\r\n\r\n    return filtered;\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <TableContainer\r\n      className={clsx(classes.container, classes.root)}\r\n      component={Paper}\r\n    >\r\n      <Table className=\"\" stickyHeader aria-label=\"sticky table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>LOCATION</TableCell>\r\n            <TableCell align=\"right\">CONFIRMED</TableCell>\r\n            <TableCell align=\"right\">DEAD</TableCell>\r\n            <TableCell align=\"right\">RECOVERED</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {filterProvinces().length === 0 ? (\r\n            <TableRow>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                <h2>No Data available</h2>\r\n              </TableCell>\r\n            </TableRow>\r\n          ) : (\r\n            filterProvinces().map((row, i) => (\r\n              <TableRow key={i}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.location}\r\n                </TableCell>\r\n                <TableCell align=\"right\">{row.confirmed}</TableCell>\r\n                <TableCell align=\"right\">{row.dead}</TableCell>\r\n                <TableCell align=\"right\">{row.recovered}</TableCell>\r\n              </TableRow>\r\n            ))\r\n          )}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default TableProvinces;\r\n","import React from \"react\";\r\n\r\nimport CovidLogo from \"../../images/virus.png\";\r\n\r\nimport { AppBar, makeStyles, Toolbar, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: \"#f2e9e4\",\r\n    color: \"black\",\r\n  },\r\n  img: {\r\n    width: \"50px\",\r\n    height: \"50px\",\r\n  },\r\n  tittle: {\r\n    padding: theme.spacing(1),\r\n    marginLeft: \"5px\",\r\n  },\r\n}));\r\n\r\nconst Nav = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar position=\"static\" className={classes.root}>\r\n      <Toolbar>\r\n        <img src={CovidLogo} alt=\"\" className={classes.img} />\r\n        <Typography variant=\"h6\" className={classes.tittle}>\r\n          COVID-19 Tracker\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\n\r\nimport \"./App.css\";\r\n\r\n//fetch Api\r\nimport { fetchDataGlobal, fetchDataByCountry, fetchDataProv } from \"./Api\";\r\n\r\n//components\r\nimport Cards from \"./components/Cards/Cards\";\r\nimport CountryPicker from \"./components/CountryPicker/CountryPicker\";\r\nimport Chart from \"./components/Chart/Chart\";\r\nimport TableProvinces from \"./components/Table/TableProvinces\";\r\nimport Nav from \"./components/Nav/Nav\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    data: {},\r\n    dataProvinces: [],\r\n    countrySelected: null,\r\n    countryFilter: \"\",\r\n    stepTable: 1,\r\n    loadingDataSelected: false,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const fetchedData = await fetchDataGlobal();\r\n    const fetchedDataProvinces = await fetchDataProv();\r\n\r\n    this.setState({ data: fetchedData, dataProvinces: fetchedDataProvinces });\r\n  }\r\n\r\n  handleCountry = async (value) => {\r\n    // console.log(value);\r\n    const result = await fetchDataByCountry(value.countryCode);\r\n    // console.log(result);\r\n    this.setState({ data: result, countrySelected: value.countryCode });\r\n  };\r\n\r\n  renderTableOrLine = () => {\r\n    if (this.state.stepTable === 1) {\r\n      return (\r\n        <TableProvinces\r\n          countrySelected={this.state.countrySelected}\r\n          provinces={this.state.dataProvinces}\r\n        />\r\n      );\r\n    } else {\r\n      const { confirmed, recovered, deaths } = this.state.data;\r\n      return (\r\n        <Chart\r\n          country={this.state.countrySelected}\r\n          confirmed={confirmed}\r\n          recovered={recovered}\r\n          deaths={deaths}\r\n        />\r\n      );\r\n    }\r\n  };\r\n  render() {\r\n    const { lastUpdate } = this.state.data;\r\n    // console.log(this.state.data);\r\n    return (\r\n      <div>\r\n        <Nav />\r\n        <div className=\"container\">\r\n          <h3>Last updated : {new Date(lastUpdate).toDateString()} </h3>\r\n          <Cards data={this.state.data} />\r\n\r\n          <div className=\"section-data\">\r\n            <div className=\"search-country\">\r\n              <form action=\"\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Search Country\"\r\n                  onChange={(e) =>\r\n                    this.setState({ countryFilter: e.target.value })\r\n                  }\r\n                />\r\n              </form>\r\n\r\n              <CountryPicker\r\n                countryFilter={this.state.countryFilter}\r\n                countrySelected={this.state.countrySelected}\r\n                handleCountry={this.handleCountry}\r\n              />\r\n            </div>\r\n            <div className=\"section-table\">\r\n              {this.state.stepTable === 0 ? (\r\n                <button onClick={() => this.setState({ stepTable: 1 })}>\r\n                  CITIES\r\n                </button>\r\n              ) : (\r\n                <button onClick={() => this.setState({ stepTable: 0 })}>\r\n                  PIE\r\n                </button>\r\n              )}\r\n\r\n              {this.renderTableOrLine()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <footer>\r\n          <h5>Developed By AS</h5>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/> , document.getElementById('root'));","module.exports = __webpack_public_path__ + \"static/media/virus.572c50c6.png\";"],"sourceRoot":""}